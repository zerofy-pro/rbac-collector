name: Build and Release
on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the version
        id: get_version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAG="latest"
          fi
          echo "VERSION=$TAG" >> $GITHUB_ENV

      - name: Build Docker Image
        run: make docker-build VERSION=${{ env.VERSION }} DOCKER_REPO=${{ github.repository }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ github.repository }}:${{ env.VERSION }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push Docker Image
        run: make docker-push VERSION=${{ env.VERSION }} DOCKER_REPO=${{ github.repository }}

      - name: Package Helm Chart
        if: startsWith(github.ref, 'refs/tags/') 
        run: make helm-package VERSION=${{ env.VERSION }}

      - name: Create GitHub Release and Upload Assets
        if: startsWith(github.ref, 'refs/tags/') 
        uses: softprops/action-gh-release@v2
        with:
          files: ./*.tgz
          generate_release_notes: true
